name: Build AppImage
on: [workflow_dispatch, push]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Get LISF libraries image
        run: curl -O https://portal.nccs.nasa.gov/lisdata_pub/TESTING/dev-images/master/lisf_libraries.tar.gz
      - name: Load LISF libraries image
        run: docker image load --input lisf_libraries.tar.gz
      - name: Checkout LISF source code
        uses: actions/checkout@v3
      - name: Compile LISF
        run: docker build --build-arg LISF_SOURCE=$GITHUB_WORKSPACE --tag lisf_appdir --file ./.github/scripts/appimage/Dockerfile $GITHUB_WORKSPACE/..
      - name: Make AppImage
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends wget
          sudo apt-get install -y --no-install-recommends fuse
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod 755 appimagetool-x86_64.AppImage
          mv appimagetool-x86_64.AppImage /usr/local/bin/appimagetool
          ./.github/scripts/appimage/make_appimage
      - name: Prepare release notes
        run: |
          echo "This is a test release." >> "$RUNNER_TEMP/notes.md"
      - name: Create release
        env:
          GH_TOKEN: ${{ github.token }}
          TEST_TAG: test_appimage
          PRERELEASE: --prerelease
          TITLE: "Test Release"
        run: |
          gh release delete $TEST_TAG --yes || true
          git push origin :$TEST_TAG || true
          gh release create $TEST_TAG $PRERELEASE --notes-file "$RUNNER_TEMP/notes.md" --title "$TITLE" --target $GITHUB_SHA ./LISF-x86_64.AppImage
